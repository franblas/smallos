#ifndef IDT_H#define IDT_H/** * http://wiki.osdev.org/Interrupt_Descriptor_Table * entry = segment */#include "common.h"/* IDT structures */typedef struct {  u16 size;     // Size of the idt table  u32 address;  // Address of the first idt entry} __attribute__((packed)) idt_table;typedef struct {  u16 base_low;  // Lower 16 bits of the base  u16 selector;  // Kernel segment selector  u8 reserved;   // Unused byte, set to 0  u8 flags;      // Config flags  u16 base_high; // Last 16 bits of the base} __attribute__((packed)) idt_entry;/** idt_load_and_set: * Load and set the interrupts descriptor table (IDT). * Called from 'idt_asm' assembly code. * * @param (u32) Address of the IDT table */void idt_load_and_set(u32);/** idt_init: * Initialize the IDT table and entries. * */void idt_init();#endif /* IDT_H */